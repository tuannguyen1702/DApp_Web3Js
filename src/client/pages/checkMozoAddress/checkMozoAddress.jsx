import React, { Component } from "react";
import _ from 'lodash'
import { connect } from 'react-redux'
import FormModel from '../../commons/forms/_.extend'
import { observer } from 'mobx-react';
import NetworkService from "../../network/NetworkService"
import { CheckMozoAddressModel } from "./checkMozoAddressModel"
import { injectIntl, FormattedMessage } from 'react-intl';
import { Container, Col, Row, Button, Form, FormGroup, Label, Input, FormText, Collapse, CardBody, Card } from 'reactstrap';
import { TextField, DatePicker, Select, UploadImage } from '../../components'
import { Observable } from 'rxjs/Observable'
import { Url } from '../../commons/consts/config';
import { browserHistory } from "react-router";
import Rx from 'rxjs/Rx';
import moment from 'moment'

class BuyToken extends Component {
    constructor(props) {
        super(props)

        this.state = {
            isMozoAddress: null
        }

        this.initFormModel()
    }

    initFormModel() {
        var self = this
        self.form = new FormModel({ ...CheckMozoAddressModel }, { name: 'CheckMozoAddressModel' })

        self.form.onSuccess = function (form) {
            NetworkService.checkMozoAddress(form.values().address).subscribe(
                function onNext(response) {
                    self.setState({ isMozoAddress: response })
                },
                function onError(e) {
                    console.log("onError")
                },
                function onCompleted() {

                }
            )
        }
    }

    buyTokenClick() {
        var self = this
        browserHistory.push({
            pathname: "/" + Url.buyToken + "/from/" + self.form.$("address").value
        });
    }

    render() {
        var self = this
        var { isMozoAddress } = self.state
        return (
            <div>
                <div>
                    <div className="main-title-container">
                        <h2 className="main-title"><FormattedMessage id="Confirm Contract Address" /></h2>
                        <div><FormattedMessage id="To make sure this address is generated by Mozo, please check before continue." /></div>
                    </div>
                    <Form>
                        <Row>
                            <Col xs="12" sm="6" className={isMozoAddress == false?"check-fail":""}>
                                <TextField field={self.form.$("address")} />
                                {isMozoAddress != null && <div className="message-for-text">
                                    {isMozoAddress ? <span className="success-message"><i className="success-icon"></i> <FormattedMessage id="Your contract address is correct!" /></span> : <span className="fail-message"><i className="fail-icon"></i> <FormattedMessage id="This address does not exist." /></span>}
                                </div>}
                            </Col>
                        </Row>
                        <Row className="mt-md">
                            <Col xs="6">
                                {isMozoAddress ? <Button color="info"
                                    onClick={() => self.buyTokenClick()} ><FormattedMessage id="Buy Token" /></Button> : <Button color="primary"
                                        onClick={self.form.onSubmit.bind(this)} ><FormattedMessage id="Check Address" /></Button>}
                            </Col>
                        </Row>

                    </Form>
                </div>
            </div>

        )
    }

}


export default injectIntl(observer(BuyToken))